## 问题描述
[Rotate Image](https://leetcode.com/problems/rotate-image/ )：
一个n*n矩阵表示一张2D图片，返回顺时针转动90度后的矩阵。

**要求**inplace，不申请额外空间

## 解题思路
* 一圈一圈的换位置，矩阵每一圈，从0，0开始到第一行倒数第二个位置，依次交换四个值

## 代码
```python
def rotate(self, matrix: List[List[int]]) -> None:
    """
    Do not return anything, modify matrix in-place instead.
    """
    n = len(matrix)
    rotated_range = n//2
    for i in range(rotated_range):#i表示第几个圈
        for j in range(i, n-i-1): #j表示每个圈第一行第几位
            matrix[i][j], matrix[j][n-1-i], matrix[n-1-i][n-1-j], matrix[n-1-j][i] = matrix[n-1-j][i], matrix[i][j], matrix[j][n-1-i], matrix[n-1-i][n-1-j]

```
## 其他思路
- 在坐标系中，顺时针旋转90度即把(i,j)->(j,-i)，也就是先上下反转，再根据y=-x轴对称
```python
def rotate(self, matrix: List[List[int]]) -> None:
    matrix.reverse() #上下翻转
    for i in range(len(matrix)):
        for j in range(i):
            matrix[i][j], matrix[j][i] = matrix[j][i], matrix[i][j] #根据y=-x对称
```
- n是list的长度，那么list[n-1-i]可以写作list[-1-i]
